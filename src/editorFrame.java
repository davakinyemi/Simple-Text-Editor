
import javax.swing.*;
import java.awt.event.*;
import java.io.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
class CloseActionHandler implements ActionListener{
    public void actionPerformed(ActionEvent e){
        
    }
}
/**
 *
 * @author dav
 */
public class editorFrame extends javax.swing.JFrame {
    private String defaultTitle = "Untitled Document";
    /**
     * Creates new form editorFrame
     */
    
    public editorFrame() {
        initComponents();
        createNewFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");
        jMenu1.setName("openMenuItem"); // NOI18N

        jMenuItem1.setText("new");
        jMenuItem1.setName("addNewDoc"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("save");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("open");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        createNewFile();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileSave = new JFileChooser();
        fileSave.showOpenDialog(new JFrame());
        saveFile(fileSave.getSelectedFile());
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileOpen = new JFileChooser();
	fileOpen.showOpenDialog(new JFrame());
	openFile(fileOpen.getSelectedFile());
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void openFile(File file){        
        JTextArea textarea;
        if(docEmpty()){
            JScrollPane sp = (JScrollPane) jTabbedPane1.getSelectedComponent();
            textarea = (JTextArea) sp.getViewport().getView();
            updateDocName(file);
        } else{
            textarea = new JTextArea();          
            createNewFile(textarea, file.getName());
        }
        
        try{
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line = null;
                StringBuilder sb = new StringBuilder();
                while((line = reader.readLine()) != null){
                    sb.append(line).append("\n");
                }
                textarea.setText(sb.toString());
            }
            } catch (Exception ex){
                System.out.println("couldn't read the card file");
            }        
        
    }
    
    private void createNewFile(){
        createNewFile(new JTextArea(), defaultTitle);
    }
    
    private void createNewFile(JTextArea textarea, String title){
        JPanel panel = new JPanel();
        JButton button = new JButton("x");
        button.addActionListener((ActionEvent e) -> {
            int i = jTabbedPane1.indexOfTabComponent(panel);
            if (i != -1) {
                jTabbedPane1.remove(i);
            }
        });
        
        JLabel label = new JLabel(title);
        
        panel.add(label);        
        panel.add(button);
        
        jTabbedPane1.addTab(null, new JScrollPane(textarea,
                            JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS));
        jTabbedPane1.setTabComponentAt(jTabbedPane1.getTabCount() - 1, panel);
    }    
    
    private void saveFile(File file){
        JScrollPane sp = (JScrollPane) jTabbedPane1.getSelectedComponent();
        JTextArea textarea = (JTextArea) sp.getViewport().getView(); 
        
        try{
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
                writer.write(textarea.getText());
            }
        } catch(IOException ex){
            JOptionPane.showMessageDialog(new JFrame(), "An Error has occured!" + "\n" + "File could not be saved.");
        }
        
        updateDocName(file);
        
    }
    
    private void updateDocName(File file){
        JLabel temp;
        JPanel panel = (JPanel) jTabbedPane1.getTabComponentAt(jTabbedPane1.getSelectedIndex());
        for(int i = 0; i < panel.getComponentCount(); i++){
            if(panel.getComponent(i) instanceof JLabel){
                temp = (JLabel) panel.getComponent(i);
                temp.setText(file.getName());
            }                
        }
    }
    
    private boolean docEmpty(){
        if(jTabbedPane1.getComponentCount() == 0)
            return false;
        
        JScrollPane sp = (JScrollPane) jTabbedPane1.getSelectedComponent();
        JTextArea textarea = (JTextArea) sp.getViewport().getView(); 
        
        return "".equals(textarea.getText()) || textarea.getText() == null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
